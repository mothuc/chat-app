{"ast":null,"code":"var _jsxFileName = \"D:\\\\Chat\\\\src\\\\components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { v4 as uuid } from \"uuid\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  console.log(data);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {//TODO:Handle Error\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"LxBGUThHibwmApaPJomxIOCeC+Y=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Chat/src/components/Input.jsx"],"names":["React","useContext","useState","Img","Attach","v4","uuid","AuthContext","ChatContext","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","getDownloadURL","ref","uploadBytesResumable","Input","text","setText","img","setImg","currentUser","data","console","log","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","user","e","target","value","display","files"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Img from \"../img/img.png\";\r\nimport Attach from \"../img/attach.png\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { ChatContext } from \"../context/ChatContext\";\r\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\";\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nfunction Input() {\r\n  const [text, setText] = useState(\"\");\r\n  const [img, setImg] = useState(null);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { data } = useContext(ChatContext);\r\n  console.log(data);\r\n\r\n  const handleSend = async () => {\r\n    if (img) {\r\n      const storageRef = ref(storage, uuid());\r\n      const uploadTask = uploadBytesResumable(storageRef, img);\r\n\r\n      uploadTask.on(\r\n        (error) => {\r\n          //TODO:Handle Error\r\n        },\r\n        () => {\r\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n            await updateDoc(doc(db, \"chats\", data.chatId), {\r\n              messages: arrayUnion({\r\n                id: uuid(),\r\n                text,\r\n                senderId: currentUser.uid,\r\n                date: Timestamp.now(),\r\n                img: downloadURL,\r\n              }),\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      await updateDoc(doc(db, \"chats\", data.chatId), {\r\n        messages: arrayUnion({\r\n          id: uuid(),\r\n          text,\r\n          senderId: currentUser.uid,\r\n          date: Timestamp.now(),\r\n        }),\r\n      });\r\n    }\r\n\r\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n      [data.chatId + \".lastMessage\"]: {\r\n        text,\r\n      },\r\n      [data.chatId + \".date\"]: serverTimestamp(),\r\n    });\r\n\r\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\r\n      [data.chatId + \".lastMessage\"]: {\r\n        text,\r\n      },\r\n      [data.chatId + \".date\"]: serverTimestamp(),\r\n    });\r\n\r\n    setText(\"\");\r\n    setImg(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your message\"\r\n        onChange={(e) => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <div className=\"send\">\r\n        <img src={Attach} alt=\"\" />\r\n        <input\r\n          type=\"file\"\r\n          style={{ display: \"none\" }}\r\n          id=\"file\"\r\n          onChange={(e) => setImg(e.target.files[0])}\r\n        />\r\n        <label htmlFor=\"file\">\r\n          <img src={Img} alt=\"\" />\r\n        </label>\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}